"use strict";

const genresTop = {
	'1': "Фантастика",
	'2': "Детективи й Трилери",
	'3': "Проза",
	'4': "Любовні романи",
	'5': "Пригоди",
	'6': "Дитяча література",
	'7': "Поезія, Драматургія",
	'8': "Стародавнє",
	'9': "Наука, Освіта",
	'A': "Комп'ютери та Інтернет",
	'B': "Довідкова література",
	'C': "Документальна література",
	'D': "Релігія та духовність",
	'E': "Гумор",
	'F': "Домоведення (Будинок та родина)",
	'0': "Економіка і бізнес",
};

const genresSub = {
	'11': "Альтернативна історія",
	'12': "Бойова фантастика",
	'13': "Епічна фантастика",
	'14': "Героїчна фантастика",
	'15': "Детективна фантастика",
	'16': "Кіберпанк",
	'17': "Космічна фантастика",
	'18': "Соціально-психологічна фантастика",
	'19': "Жахи й Містика",
	'1A': "Гумористична фантастика",
	'1B': "Фэнтези",
	'10': "Наукова Фантастика",
	'21': "Класичний детектив",
	'22': "Поліцейський детектив",
	'23': "Бойовик",
	'24': "Іронічний детектив",
	'25': "Історичний детектив",
	'26': "Шпигунський детектив",
	'27': "Кримінальний детектив",
	'28': "Політичний детектив",
	'29': "Маніяки",
	'2A': "Крутий детектив",
	'2B': "Трилер",
	'20': "Детектив",
	'31': "Класична проза",
	'32': "Історична проза",
	'33': "Сучасна проза",
	'34': "Контркультура",
	'35': "Російська класична проза",
	'36': "Радянська класична проза",
	'37': "Військова проза",
	'30': "Проза",
	'41': "Сучасні любовні романи",
	'42': "Історичні любовні романи",
	'43': "Гостросюжетні любовні романи",
	'44': "Короткі любовні романи",
	'45': "Еротика",
	'46': "Любовна фантастика",
	'40': "Любовні романи",
	'51': "Вестерн",
	'52': "Історичні пригоди",
	'53': "Пригоди про індіанців",
	'54': "Морські пригоди",
	'55': "Подорожі та географія",
	'56': "Природа й тварини",
	'50': "Пригоди",
	'61': "Казка",
	'62': "Дитячі вірші",
	'63': "Дитяча проза",
	'64': "Дитяча фантастика",
	'65': "Дитячі гостросюжетні",
	'66': "Дитячі пригоди",
	'67': "Дитяча освітня література",
	'60': "Дитяча література",
	'71': "Поезія",
	'72': "Драматургія",
	'81': "Антична література",
	'82': "Європейська стародавня література",
	'83': "Давньоруська література",
	'84': "Давньосхідна література",
	'85': "Міфи. Легенди. Епос",
	'80': "Стародавня література",
	'91': "Історія",
	'92': "Психологія",
	'93': "Культурологія",
	'94': "Релігіознавство",
	'95': "Філософія",
	'96': "Політика",
	'97': "Ділова література",
	'98': "Юриспруденція",
	'99': "Мовознавство",
	'9A': "Медицина",
	'9B': "Фізика",
	'9C': "Математика",
	'9D': "Хімія",
	'9E': "Біологія",
	'9F': "Технічні науки",
	'90': "Наукова література",
	'A1': "Інтернет",
	'A2': "Програмування",
	'A3': "Комп'ютерне залізо (апаратне забезпечення)",
	'A4': "Програми",
	'A5': "Бази даних",
	'A6': "ОС і Мережі",
	'A0': "Комп'ютерна література",
	'B1': "Енциклопедії",
	'B2': "Словники",
	'B3': "Довідники",
	'B4': "Керівництва",
	'B0': "Довідкова література",
	'C1': "Біографії та Мемуари",
	'C2': "Публіцистика",
	'C3': "Критика",
	'C4': "Мистецтво та Дизайн",
	'C5': "Документальна література",
	'D1': "Релігія",
	'D2': "Езотеріка",
	'D3': "Самовдосконалення",
	'D0': "Релігійна література",
	'E1': "Анекдоти",
	'E2': "Гумористична проза",
	'E3': "Гумористичні вірші",
	'E0': "Гумор",
	'F1': "Кулінарія",
	'F2': "Домашні тварини",
	'F3': "Хоббі та ремесла",
	'F4': "Розваги",
	'F5': "Здоров'я",
	'F6': "Сад і город",
	'F7': "Зроби сам",
	'F8': "Спорт",
	'F9': "Еротика, Секс",
	'F0': "Домоведення",
	'FA': "Путівники",
	'01': "Пошук роботи, кар'єра",
	'02': "Управління, підбір персоналу",
	'03': "Маркетинг, реклама",
	'04': "Банківська справа",
	'05': "Цінні папери, інвестиції",
	'06': "Бухоблік, оподаткування, аудит",
	'07': "Зовнішньоекономічна діяльність",
	'00': "Економіка",
	'08': "Галузеві видання",
	'09': "Корпоративна культура",
	'0A': "Особисті фінанси",
	'0B': "Нерухомість",
	'0C': "Про бізнес популярно",
	'0D': "Малий бізнес",
	'0E': "Діловодство",
	'0F': "Довідники з економіки",
};

function decodeGenres(code) {
    if (code === undefined || code === null || code.length % 2 == 1) {
	console.log('decodeGenres: bad code:');
	console.log(code);
	return '-';
    }
    let genres = [];
    for (let i=0; i < code.length; i+=2) {
	const top = code.charAt(i);
	const sub = code.charAt(i+1);
	let out = '';
	let topstring = genresTop[top];
	if (topstring) {
	    out += topstring + '/';
	}
	out += genresSub[top+sub];
	genres.push(out);
    }
    return genres.join("; ");
}


async function fetchBooksData(queryParams) {
    const book2authorsPromise = fetch('/backend/get_map_book_authors')
            .then(response => response.json())
            .catch(error => {
              console.error('Error fetching book2authors:', error);
            });
    const authorMapId2NamePromise = fetch('/backend/get_author_map_id_name')
            .then(response => response.json())
            .catch(error => {
              console.error('Error fetching authorMapId2Name:', error);
            });

    let books_url = '/backend/get_books';
    if (queryParams.length>0) {
	books_url += '?' + queryParams.join("&");
    };
    console.log('books_url='+books_url);

    const booksPromise = fetch(books_url)
            .then(response => response.json())
            .catch(error => {
              console.error('Error fetching books:', error);
            });

    let book2authors = await book2authorsPromise;
    if (book2authors === undefined) book2authors = {};
    //console.log(book2authors);

    let authorMapId2Name = await authorMapId2NamePromise;
    if (authorMapId2Name === undefined) authorMapId2Name = {};
    //console.log(authorMapId2Name);

    let data = await booksPromise;
    //console.log(data);
    for (let i in data) {
	//console.log('i=', i, ' genres=', data[i].genres);
	data[i].genre = decodeGenres(data[i].genres);
	const authors = [];
	const authorstr = [];
	const book_id = data[i].id;
	const authorIds = book2authors[book_id];
	//console.log('book_id=', book_id, ' authorIds=', authorIds);
	for (let j in authorIds) {
	    const author_id = authorIds[j];
	    authors.push({id: author_id, full_name: authorMapId2Name[author_id]});
	    authorstr.push(authorMapId2Name[author_id]);
	}
	data[i].authors = authors.sort((a, b) => { return a.full_name.localeCompare(b.full_name) });
	data[i].authorstr = authorstr.join(', ');
	//console.log('book_id=', book_id, ' authorstr=', data[i].authorstr);
    }
    return data;
};
